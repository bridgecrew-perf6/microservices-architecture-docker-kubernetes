version: '3.8'

services:
  mongodb:
    image: mongo:5.0.2
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGODB_USER
      - MONGO_INITDB_ROOT_PASSWORD=$MONGODB_PASSWORD
    ports:
      - $MONGODB_LOCAL_PORT:$MONGODB_DOCKER_PORT
    volumes:
      - db:/data/db
    networks:
      - backend-network

  service-frontend:
    build: 
      context: .
      dockerfile: microservices/service-frontend/Dockerfile
      args: 
        build_config: production
    ports: 
      - $FRONT_LOCAL_PORT:$FRONT_DOCKER_PORT
    environment:
      - PORT=$FRONT_DOCKER_PORT
      - SERVICE_API1_ENDPOINT=http://localhost:$BACKEND1_LOCAL_PORT/api
    networks:
      - frontend-network

  service-backend1:
    restart: unless-stopped
    build: 
      context: .
      dockerfile: microservices/service-backend1/Dockerfile
      args: 
        build_info: Built from Docker compose
    env_file: ./.env
    ports: 
      - $BACKEND1_LOCAL_PORT:$BACKEND1_DOCKER_PORT
    depends_on:
      - service-frontend     
    environment:
      - PORT=$BACKEND1_DOCKER_PORT
      - SERVICE_API2_ENDPOINT=http://service-backend2:$BACKEND2_DOCKER_PORT/api
      - DB_HOST=mongodb
      - DB_USER=$MONGODB_USER
      - DB_PASSWORD=$MONGODB_PASSWORD
      - DB_NAME=$MONGODB_DATABASE
      - DB_PORT=$MONGODB_DOCKER_PORT
      - CLIENT_ORIGIN=$CLIENT_ORIGIN
    networks: 
      - backend-network
      - frontend-network

  service-backend2:
    restart: unless-stopped
    build: 
      context: .
      dockerfile: microservices/service-backend2/Dockerfile
      args: 
        build_info: Built from Docker compose
    expose:
      - $BACKEND2_DOCKER_PORT
    depends_on:
      - service-backend1
      - mongodb
    environment:
      - PORT=$BACKEND2_DOCKER_PORT
    networks: 
      - backend-network

volumes: 
  db:

networks:
  backend-network:
  frontend-network:
